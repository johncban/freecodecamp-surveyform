/* Main CSS Settings */
:root {
    font-family: Arial, Helvetica, sans-serif;
}

body {
    margin: 0;
}

body::before {
    content: '';
    position: fixed;
    top: 0;
    left: 0;
    height: 100%;
    width: 100%;
    z-index: -1;

    /*
    background-image: linear-gradient(-45deg,
            rgba(52, 52, 52, 0.8),
            rgba(134, 134, 134, 0.2),
            rgba(199, 199, 199, 0.4)), url(https://raw.githubusercontent.com/johncban/freecodecamp-surveyform/main/assets/oculus_nyc.png);
    
    background-size: cover;
    background-repeat: no-repeat;
    background-position: center;
    */

    background: linear-gradient(156deg, #f6f6ff70, #797979b4, #626364b6, #ffffff)
        /*, url(https://raw.githubusercontent.com/johncban/freecodecamp-surveyform/main/assets/oculus_nyc.png)*/
    ;
    background-size: 400% 400%;
    animation: gradient 15s ease infinite;

}

/* CSS Animation Background using @keyframes */
@keyframes gradient {
    0% {
        background-position: 0% 50%;
    }

    50% {
        background-position: 100% 50%;
    }

    100% {
        background-position: 0% 50%;
    }
}


/* Form Layout */
.container {
    width: 100%;
    margin: 3.125rem auto 3.125rem auto;
}


form {
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
    transition: 0.3s;
    background-color: rgba(255, 255, 255, 0.4);
    padding: 2.5rem 0.625rem;
}


.form-content {
    margin: 0 auto 1.25rem auto;
    padding: 0.25rem;
}


/* Card Header Layout */
.card-content {
    color: rgba(22, 32, 70, 1);
    margin: 3.125rem auto 3.125rem auto;
    padding: 0.25rem;
    text-align: center;
}

.card {
    box-shadow: 0 4px 8px 0 rgba(22, 32, 70, 0.4);
    transition: 0.3s;
    background-color: rgba(255, 255, 255, 0.2);
    padding: 2.5rem 0.625rem;
}


/* CSS Focus and (Global) Alignment
=========================== */
:focus {
    outline: none;
}

.col-1 {
    float: center;
    width: 80%;
    margin: 4% 10% 3%;
    position: -webkit-sticky;
    position: sticky;
}

.col-2 {
    float: center;
    width: 40%;
    margin: 20px 10%;
    position: -webkit-sticky;
    position: sticky;
}

.col-3 {
    width: auto;
    margin: 20px 10%;
}

/* =========================== */


/* Placeholder Label for Input 
============================== */
input+.upper-form-placeholder {
    position: absolute;
    /* transition: all 200ms; */
    transition: 0.2s ease all;
    -moz-transition: 0.2s ease all;
    -webkit-transition: 0.2s ease all;
    left: 8px;
    margin-top: -20px;

    font-size: 12px;
    font-weight: bold;
    color: #000;
}

input:placeholder-shown+.upper-form-placeholder {
    margin-top: 0%;
}

.upper-form:focus+.upper-form-placeholder {
    position: absolute;
    transition: all 200ms;
    left: 3px;
    margin-top: -20px;

    margin-bottom: 20px;
    font-size: 12px;
    font-weight: bold;
    color: #FFF;
    color: #162046;
}

/* ============================== */


/* Placeholder Label for Textarea 
============================== */
textarea+.lower-form-placeholder {
    position: absolute;
    /* transition: all 200ms; */
    transition: 0.2s ease all;
    -moz-transition: 0.2s ease all;
    -webkit-transition: 0.2s ease all;
    left: 8px;
    margin-top: 0px;

    font-size: 12px;
    font-weight: bold;
    color: #000;
}

textarea:placeholder-shown+.lower-form-placeholder {
    margin-top: 0%;
}

.lower-form:focus+.lower-form-placeholder {
    position: absolute;
    transition: all 200ms;
    left: 3px;
    margin-top: -20px;
    margin-bottom: 20px;
    font-size: 12px;
    font-weight: bold;
    color: #FFF;
    color: #162046;
}

/* ============================== */



/* Form Control Settings 
============================== */
input[type="text"] {
    height: 30px;
    color: #000;
    width: 100%;
    box-sizing: border-box;
    letter-spacing: 1px;
    border: none;
    padding-left: 4px;
    outline: none;
}

textarea {
    color: #000;
    min-height: 120px;
    width: 100%;
    box-sizing: border-box;
    letter-spacing: 1px;
    line-height: 1.5;
    border: none;
    outline: none;
    resize: vertical;
    padding: 0.625rem;
    padding-left: 4px;
}

input[type="email"] {
    height: 30px;
    color: #000;
    width: 100%;
    box-sizing: border-box;
    letter-spacing: 1px;
    border: none;
    padding-left: 4px;
    outline: none;
}

input[type="number"] {
    height: 30px;
    color: #000;
    width: 100%;
    box-sizing: border-box;
    letter-spacing: 1px;
    outline: none;
    border: none;
}

input[type="radio"] {
    opacity: 0;
    position: absolute;
}

/* ============================== */


/* Radio Effect Theme */
.white {
    --primary: #FFF;
    --other: hsl(0, 0%, 14%);
}

/* Option Select Settings */
.sector-field select {
    height: 40px;
    width: 100%;
    box-sizing: border-box;
    letter-spacing: 1px;
    outline: none;
    padding-top: 10px;
}

.select-wrap label {
    font-size: 12px;
    font-weight: bold;
    color: #162046;
    padding: 0 8px;
    position: absolute;
    top: 3px;
    left: 1px;
}

.confidence-label {
    display: flex;
    justify-content: flex-start;
    align-items: center;
    flex-wrap: nowrap;

    margin: 12px 0;

    cursor: pointer;
    position: relative;
}

/* .Radio Style Settings */
.radio-style {
    width: 16px;
    height: 16px;

    border: 1px solid var(--other);
    border-radius: 100%;
    margin-right: 16px;

    position: relative;
}

.radio-style::before,
.radio-style::after {
    content: "";
    display: block;

    width: inherit;
    height: inherit;

    border-radius: inherit;

    position: absolute;
    transform: scale(0);
    transform-origin: center center;
}

.radio-style:before {
    background: var(--other);
    opacity: 0;
    transition: .3s;
}

.radio-style::after {
    background: var(--primary);
    opacity: .4;
    transition: .6s;
}


/* .Radio Label Settings */
.radio-label {
    color: var(--other);
}


/* Radio State */
input:checked+.radio-style::before {
    opacity: 1;
    transform: scale(.6);
}


/* Other Radio States */
input:hover+.radio-style,
input:focus+.radio-style {
    border: 1px solid var(--primary);
}

input:hover+.radio-style:before,
input:focus+.radio-style:before {
    background: var(--primary);
}

input:hover~.radio-label {
    color: var(--primary);
}

input:focus+.radio-style::after,
input:active+.radio-style::after {
    opacity: .1;
    transform: scale(2.6);
}




/* Border Effect 2 Settings */
.effect-2~.focus-border {
    position: absolute;
    bottom: 0;
    left: 50%;
    width: 0;
    height: 2px;
    background-color: #162046;
    transition: 0.4s;
}

.effect-2:focus~.focus-border {
    width: 100%;
    transition: 0.4s;
    left: 0;
}


/* Border Effect 8 Settings */
.effect-8 {
    transition: 0.4s;
    outline: none;
}

.effect-8~.focus-border:before,
.effect-8~.focus-border:after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 0;
    height: 3px;
    background-color: #162046;
    transition: 0.3s;
}

.effect-8~.focus-border:after {
    top: auto;
    bottom: 0;
    left: auto;
    right: 0;
}

.effect-8~.focus-border i:before,
.effect-8~.focus-border i:after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 3px;
    height: 0;
    /* background-color: #99999A; */
    background-color: #162046;
    transition: 0.4s;
}

.effect-8~.focus-border i:after {
    left: auto;
    right: 0;
    top: auto;
    bottom: 0;
}

.effect-8:focus~.focus-border:before,
.effect-8:focus~.focus-border:after {
    width: 100%;
    transition: 0.3s;
}

.effect-8:focus~.focus-border i:before,
.effect-8:focus~.focus-border i:after {
    height: 100%;
    transition: 0.4s;
}



/* Button CSS Settings */
.btn-border {
    border: none;
    /* color: #162046; */
    color: #8D8D8D;
    outline: none;
    position: relative;
    border: 1px solid #162046;

    text-align: center;
    text-decoration: none;
    font-size: 100%;
    font-weight: bold;
    font-family: sans-serif;
    white-space: nowrap;
    -webkit-font-smoothing: antialiased;
    background-color: rgba(22, 32, 70, 0.8);
    display: inline-block;
    padding: 12px 40px 10px;
    margin: 15px 0px;
    /* text-shadow: 2px 2px 0px rgba(0, 0, 0, 0.2); */
    -webkit-transition: all 0.25s ease;
    -ms-transition: all 0.25s ease;
    -moz-transition: all 0.25s ease;
    -o-transition: all 0.25s ease;
    transition: all 0.25s ease;
    width: 100%;


    box-shadow: 0.5rem 0.5rem rgba(46, 49, 49, .2), -0.5rem -0.5rem rgba(228, 233, 237, .8);
}

.btn-border:hover {
    /* background: linear-gradient(-0.25turn, rgba(22,32,70,1), rgba(82,70,128,.8)); */
    background-color: #162046;
    color: #fff;
    box-shadow: 0.5rem 0.5rem rgba(0, 0, 0, 1), -0.5rem -0.5rem rgba(255, 255, 255, 1);
}

.btn-border:before,
.btn-border:after {
    border: 0 solid transparent;
    transition: all 0.3s;
    content: '';
    height: 0;
    position: absolute;
    width: 0px;
    /* 24px */
}

.btn-border:before {
    border-top: 1.5px solid rgba(0, 0, 0, 0.8);
    right: 0;
    top: -4px;
}

.btn-border:after {
    border-bottom: 1.5px solid rgba(255, 255, 255, 0.8);
    bottom: -4px;
    left: 0;
}

.btn-border:hover:before,
.btn-border:hover:after {
    width: 100%;
}




/*
=====
Check box style settings
=====
*/

.toggle {
    --uiToggleSize: var(--toggleSize, 1.25rem);
    --uiToggleBorderWidth: var(--toggleBorderWidth, 1px);
    --uiToggleColor: var(--toggleColor, #000);

    display: var(--toggleDisplay, inline-flex);
    position: relative;
}

.toggle:hover {
    color: #FFF;
    --uiToggleColor: var(--toggleColor, #FFF);
}

.toggle__input {
    /*
  The pattern by Sara Soueidan https://www.sarasoueidan.com/blog/inclusively-hiding-and-styling-checkboxes-and-radio-buttons/
  */
    width: var(--uiToggleSize);
    height: var(--uiToggleSize);
    opacity: 0;

    position: absolute;
    top: 0;
    left: 0;
    margin: 0;
}

/*
1. Calculation of the gap for the custom checkbox
*/
.toggle__label {
    display: inline-flex;
    min-height: var(--uiToggleSize);
    padding-left: calc(var(--uiToggleSize) + var(--toggleIndent, .8em));
}

.toggle__input:not(:disabled)~.toggle__label {
    cursor: pointer;
}

/*
1. Ems helps to calculate size of the checkbox
*/
.toggle__label::after {
    content: "";
    box-sizing: border-box;
    width: 1em;
    height: 1em;
    font-size: var(--uiToggleSize);
    /* 1 */

    background-color: transparent;
    border: var(--uiToggleBorderWidth) solid var(--uiToggleColor);

    position: absolute;
    left: 0;
    top: 0;
    z-index: 2;
}

.toggle__input:checked~.toggle__label::after {
    background-color: var(--uiToggleColor);
}

.toggle__text {
    margin-top: auto;
    margin-bottom: auto;
}

/*
The arrow size and position depends from sizes of square because I needed an arrow correct positioning from the top left corner of the element toggle

1. Ems helps to calculate size and position of the arrow
*/

.toggle__label::before {
    content: "";
    width: 0;
    height: 0;
    font-size: var(--uiToggleSize);
    /* 1 */

    border-left-width: 0;
    border-bottom-width: 0;
    border-left-style: solid;
    border-bottom-style: solid;
    border-color: var(--toggleArrowColor, #fff);

    position: absolute;
    top: .5428em;
    left: .25em;
    z-index: 3;

    transform-origin: left top;
    transform: rotate(-40deg) skew(10deg);
}

.toggle__input:checked~.toggle__label::before {
    --uiToggleArrowWidth: var(--toggleArrowWidth, 2px);

    width: .4em;
    height: .2em;
    border-left-width: var(--uiToggleArrowWidth);
    border-bottom-width: var(--uiToggleArrowWidth);
}

/*
Check box States
*/

/* focus state */

.toggle:focus-within {
    outline: var(--toggleOutlineWidthFocus, 3px) solid var(--toggleOutlineColorFocus, currentColor);
    outline-offset: var(--toggleOutlineOffsetFocus, 5px);
}

/* disabled state */

.toggle__input:disabled~.toggle__label {
    opacity: var(--toggleOpacityDisabled, .24);
    cursor: var(--toggleCursorDisabled, not-allowed);
    user-select: none;
}



.toggle__label::after {
    border-radius: var(--toggleBorderRadius, 2px);
}

/* 
The animation of switching states
*/

.toggle__input:not(:disabled)~.toggle__label::before {
    will-change: width, height;
    opacity: 0;
}

.toggle__input:not(:disabled):checked~.toggle__label::before {
    opacity: 1;
    transition: opacity .1s ease-out .25s, width .1s ease-out .5s, height .2s ease-out .3s;
}

.toggle__input:not(:disabled)~.toggle__label::after {
    will-change: background-color;
    transition: background-color .2s ease-out;
}



/* Adaptive Layout Media */
@media (min-width: 576px) {
    .container {
        max-width: 540px;
    }
}

@media (min-width: 768px) {
    .container {
        max-width: 720px;
    }
}