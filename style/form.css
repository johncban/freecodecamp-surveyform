:root {
    background-image: url(./assets/oculus_nyc.png);

    background-repeat: no-repeat;
    background-attachment: fixed;


    font-family: Arial, Helvetica, sans-serif;
}


.container {
  /*
    width: 100%;
    margin: 10% auto 10% auto;
    display: flex;
    justify-content: center;
    height: auto;
  */
  display: flex;
  margin: auto;
  position: absolute;
  justify-content: center;
  top: 50px; left: 0; bottom: 50px; right: 0;
}

.form-content {
    margin: auto 11px auto 2px;
    /* padding: 10px; */
}

.container>card {
    width: auto;
    height: auto;
}

.card {
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
    transition: 0.3s;
    /* width: 50%; */
    width: auto;
    background-color: rgba(255, 255, 255, 0.5);
}








/*= input focus effects css
=========================== */
:focus {
    outline: none;
}

.col-1 {
    float: center;
    width: 80%;
    margin: 4% 10% 3%;
    position: -webkit-sticky;
    position: sticky;
    /* DEFAULT: position: relative; */
}

.col-2 {
    float: center;
    width: 40%;
    margin: 20px 10%;
    position: -webkit-sticky;
    position: sticky;
    /* DEFAULT: position: relative; */
}

.col-3 {
    /* float: center; */
    width: auto;
    margin: 20px 10%;
}


/* necessary to give position: relative to parent. */


input+.upper-form-placeholder {
    position: absolute;
    /* transition: all 200ms; */
    transition: 0.2s ease all;
    -moz-transition: 0.2s ease all;
    -webkit-transition: 0.2s ease all;
    left: 3px;
    margin-top: -20px;

    font-size: 12px;
    font-weight: bold;
    color: #A7A7A7;
}

input:placeholder-shown+.upper-form-placeholder {
    margin-top: 0%;
}

.upper-form:focus+.upper-form-placeholder {
    position: absolute;
    transition: all 200ms;
    left: 3px;
    margin-top: -20px;

    margin-bottom: 20px;
    font-size: 12px;
    color: #777;
    color: #FFF;
}





input[type="text"] {
    height: 30px;
    color: #000;
    width: 100%;
    box-sizing: border-box;
    letter-spacing: 1px;
    border: none;
    padding-left: 4px;
    /*
  display:block;
  background-color: transparent; 
  border:none;
  border-bottom:1px solid #99999A;
  */
}

input[type="email"] {
    height: 30px;
    color: #000;
    width: 100%;
    box-sizing: border-box;
    letter-spacing: 1px;
    border: none;
    padding-left: 4px;
    /*
  display:block;
  background-color: transparent; 
  border:none;
  border-bottom:1px solid #99999A;
  */
}

input[type="number"] {
    height: 30px;
    color: #333;
    width: 100%;
    box-sizing: border-box;
    letter-spacing: 1px;
    outline: none;

    /*
  display:block;
  background-color: transparent; 
  border:none;
  border-bottom:1px solid #99999A;
  */
}

input[type="radio"] {
    opacity: 0;
    position: absolute;

    /*
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  z-index: -1;
  color: #333;
  width: 50%;
  */


}

.white {
    --primary: hsla(0, 100%, 100%, 0.8);
    /* hsl(250, 100%, 44%); */
    --other: hsl(0, 0%, 14%);
}

.sector-field select {
    height: 40px;
    width: 100%;
    box-sizing: border-box;
    letter-spacing: 1px;
    outline: none;
    padding-top: 10px;
}

.select-wrap label {
    font-size: 12px;
    font-weight: bold;
    color: #A7A7A7;
    padding: 0 8px;
    position: absolute;
    top: 1px;
    left: -3px;
}

.confidence-label {
    display: flex;
    justify-content: flex-start;
    align-items: center;
    flex-wrap: nowrap;

    margin: 12px 0;

    cursor: pointer;
    position: relative;
}

/* .design */
.radio-style {
    width: 16px;
    height: 16px;

    border: 1px solid var(--other);
    border-radius: 100%;
    margin-right: 16px;

    position: relative;
}

.radio-style::before,
.radio-style::after {
    content: "";
    display: block;

    width: inherit;
    height: inherit;

    border-radius: inherit;

    position: absolute;
    transform: scale(0);
    transform-origin: center center;
}

.radio-style:before {
    background: var(--other);
    opacity: 0;
    transition: .3s;
}

.radio-style::after {
    background: var(--primary);
    opacity: .4;
    transition: .6s;
}


/* .text */
.radio-label {
    color: var(--other);
    /* font-weight: bold; */
}


/* checked state */
input:checked+.radio-style::before {
    opacity: 1;
    transform: scale(.6);
}


/* other states */
input:hover+.radio-style,
input:focus+.radio-style {
    border: 1px solid var(--primary);
}

input:hover+.radio-style:before,
input:focus+.radio-style:before {
    background: var(--primary);
}

input:hover~.radio-label {
    color: var(--primary);
}

input:focus+.radio-style::after,
input:active+.radio-style::after {
    opacity: .1;
    transform: scale(2.6);
}


.effect-2~.focus-border {
    position: absolute;
    bottom: 0;
    left: 50%;
    width: 0;
    height: 2px;
    background-color: #162046;
    transition: 0.4s;
}

.effect-2:focus~.focus-border {
    width: 100%;
    transition: 0.4s;
    left: 0;
}


.effect-8 {
    /* border: 0px solid #ccc; */
    /* padding: 7px 14px 9px; */
    transition: 0.4s;
    outline: none;
}


.effect-8~.focus-border:before,
.effect-8~.focus-border:after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 0;
    height: 2px;
    /* background-color: #99999A; */
    background-color: #162046;
    transition: 0.3s;
}

.effect-8~.focus-border:after {
    top: auto;
    bottom: 0;
    left: auto;
    right: 0;
}

.effect-8~.focus-border i:before,
.effect-8~.focus-border i:after {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 2px;
    height: 0;
    /* background-color: #99999A; */
    background-color: #162046;
    transition: 0.4s;
}

.effect-8~.focus-border i:after {
    left: auto;
    right: 0;
    top: auto;
    bottom: 0;
}

.effect-8:focus~.focus-border:before,
.effect-8:focus~.focus-border:after {
    width: 100%;
    transition: 0.3s;
}

.effect-8:focus~.focus-border i:before,
.effect-8:focus~.focus-border i:after {
    height: 100%;
    transition: 0.4s;
}


/*= input focus effects css End
=============================== */












/*
=====
CORE STYLES
=====
*/

.toggle {
    --uiToggleSize: var(--toggleSize, 1.25rem);
    --uiToggleBorderWidth: var(--toggleBorderWidth, 1px);
    --uiToggleColor: var(--toggleColor, #000);

    display: var(--toggleDisplay, inline-flex);
    position: relative;
}

.toggle:hover {
    color: #FFF;
    --uiToggleColor: var(--toggleColor, #FFF);
}

.toggle__input {
    /*
  The pattern by Sara Soueidan https://www.sarasoueidan.com/blog/inclusively-hiding-and-styling-checkboxes-and-radio-buttons/
  */
    width: var(--uiToggleSize);
    height: var(--uiToggleSize);
    opacity: 0;

    position: absolute;
    top: 0;
    left: 0;
    margin: 0;
}

/*
1. Calculation of the gap for the custom checkbox
*/

.toggle__label {
    display: inline-flex;
    min-height: var(--uiToggleSize);
    padding-left: calc(var(--uiToggleSize) + var(--toggleIndent, .8em));
}

.toggle__input:not(:disabled)~.toggle__label {
    cursor: pointer;
}

/*
1. Ems helps to calculate size of the checkbox
*/

.toggle__label::after {
    content: "";
    box-sizing: border-box;
    width: 1em;
    height: 1em;
    font-size: var(--uiToggleSize);
    /* 1 */

    background-color: transparent;
    border: var(--uiToggleBorderWidth) solid var(--uiToggleColor);

    position: absolute;
    left: 0;
    top: 0;
    z-index: 2;
}

.toggle__input:checked~.toggle__label::after {
    background-color: var(--uiToggleColor);
}

.toggle__text {
    margin-top: auto;
    margin-bottom: auto;
}

/*
The arrow size and position depends from sizes of square because I needed an arrow correct positioning from the top left corner of the element toggle

1. Ems helps to calculate size and position of the arrow
*/

.toggle__label::before {
    content: "";
    width: 0;
    height: 0;
    font-size: var(--uiToggleSize);
    /* 1 */

    border-left-width: 0;
    border-bottom-width: 0;
    border-left-style: solid;
    border-bottom-style: solid;
    border-color: var(--toggleArrowColor, #fff);

    position: absolute;
    top: .5428em;
    left: .25em;
    z-index: 3;

    transform-origin: left top;
    transform: rotate(-40deg) skew(10deg);
}

.toggle__input:checked~.toggle__label::before {
    --uiToggleArrowWidth: var(--toggleArrowWidth, 2px);

    width: .4em;
    height: .2em;
    border-left-width: var(--uiToggleArrowWidth);
    border-bottom-width: var(--uiToggleArrowWidth);
}

/*
States
*/

/* focus state */

.toggle:focus-within {
    outline: var(--toggleOutlineWidthFocus, 3px) solid var(--toggleOutlineColorFocus, currentColor);
    outline-offset: var(--toggleOutlineOffsetFocus, 5px);
}

/* disabled state */

.toggle__input:disabled~.toggle__label {
    opacity: var(--toggleOpacityDisabled, .24);
    cursor: var(--toggleCursorDisabled, not-allowed);
    user-select: none;
}

/*
=====
PRESENTATION STYLES
=====
*/

/* 
The demo skin
*/

.toggle__label::after {
    border-radius: var(--toggleBorderRadius, 2px);
}

/* 
The animation of switching states
*/

.toggle__input:not(:disabled)~.toggle__label::before {
    will-change: width, height;
    opacity: 0;
}

.toggle__input:not(:disabled):checked~.toggle__label::before {
    opacity: 1;
    transition: opacity .1s ease-out .25s, width .1s ease-out .5s, height .2s ease-out .3s;
}

.toggle__input:not(:disabled)~.toggle__label::after {
    will-change: background-color;
    transition: background-color .2s ease-out;
}

/*
=====
SETTINGS
=====
*/

.page__custom-settings {
    --toggleColor: #690e90;
    --toggleOutlineColorFocus: #690e90;
    --toggleSize: 2rem;
}


/*
=====
DEMO
=====
*/
.page {
    box-sizing: border-box;
    max-width: 45rem;
    padding: 2.75rem 2rem 2.5rem;
    margin: auto;

    background-color: #fff;
    box-shadow: 0 2px 2px 0 rgba(0, 0, 0, .14), 0 3px 1px -2px rgba(0, 0, 0, .12), 0 1px 5px 0 rgba(0, 0, 0, .2);
    border-radius: 2px;
}

.page__section {
    display: flex;
    flex-wrap: wrap;
    font-weight: 700;
}

.page__section:nth-child(n+2) {
    margin-top: 3rem;
}

.page__custom-settings {
    --pageToggleTextFontSize: 1.25rem;
}

.page__name {
    width: 100%;
}

.page__name::first-letter {
    text-transform: uppercase;
}

.page__toggle {
    margin-top: 1.25rem;
    margin-right: 1.5rem;
    font-size: var(--pageToggleTextFontSize);
}